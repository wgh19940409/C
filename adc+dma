#define ADC_CONVERTED_DATA_BUFFER_SIZE  ((uint32_t) 32)
  uint32_t ADC_DATA[ADC_CONVERTED_DATA_BUFFER_SIZE]={0};
/* USER CODE END PM */

/* Private variables ---------------------------------------------------------*/

/* USER CODE BEGIN PV */

/* USER CODE END PV */

/* Private function prototypes -----------------------------------------------*/
void SystemClock_Config(void);
/* USER CODE BEGIN PFP */

/* USER CODE END PFP */

/* Private user code ---------------------------------------------------------*/
/* USER CODE BEGIN 0 */
	uint32_t dma_cnt1 = 0;
	static volatile uint8_t AdcFlag = 0;//定义ADC完成的标志位
/* USER CODE END 0 */

/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
  /* USER CODE BEGIN 1 */
		uint32_t ad1=0,ad2=0;
		float  ad1_val=0,ad2_val=0;
		uint16_t i=0;		
  /* USER CODE END 1 */
  

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();

  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();

  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
  MX_DMA_Init();
  MX_ADC1_Init();
  MX_I2C2_Init();
  MX_TIM3_Init();
  MX_USART1_UART_Init();
  /* USER CODE BEGIN 2 */

	HAL_ADCEx_Calibration_Start(&hadc1,ADC_SINGLE_ENDED);
	HAL_Delay(100);
	
 
  /* USER CODE END 2 */


		
 
  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
  {
    /* USER CODE END WHILE */
		
    /* USER CODE BEGIN 3 */
		HAL_ADC_Start_DMA(&hadc1,(uint32_t*)& ADC_DATA, 32);
		AdcFlag=1;
		while(AdcFlag==1);
		AdcFlag=1;
		ad1=0,ad2=0;
		uint32_t sum1=0,sum2=0;
		for(i=0;i<32;)
		{
			
			ad1+=ADC_DATA[i++];
			ad2+=ADC_DATA[i++];
		}
		printf("sum1=%d\r\n",ad1);
		printf("sum2=%d\r\n",ad2);
	
		sum1/=16;
		sum2/=16;
		
		printf("ad1=%2d\r\n ad2=%2d\r\n",ad1,ad2);
		printf("V1=%.2f V2=%.2f\r\n",3.3/4096*ad1,ad2*3.3/4096);
		HAL_Delay(1000);
	}
//	
  /* USER CODE END 3 */
}
